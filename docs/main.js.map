{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.html","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.scss","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/chat.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\\n<router-outlet>\\n  <chat-dialog></chat-dialog>\\n</router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'chatbot';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ChatModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"chat-container\\\" [class.fontSizeSmall]=\\\"fontSizeBig\\\">\\n  <div class=\\\"header\\\">\\n    Altro-consumo\\n  </div>\\n  <div class=\\\"chat\\\">\\n    <ng-container  class=\\\"chat\\\" *ngFor=\\\"let message of messages | async\\\">\\n\\n      <div [ngClass]=\\\"{'bot': message.sentBy === 'bot',\\n                      'user': message.sentBy === 'user'}\\\">\\n\\n        {{message.content}}\\n      </div>\\n\\n    </ng-container>\\n  </div>\\n  <div class=\\\"input-text\\\">\\n    <button [class.fontSizeSmall] (click)=\\\"changeFontSize()\\\">+ grand</button>\\n    <input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\" placeholder=\\\"taper votre message ici\\\">\\n    <button class=\\\"button\\\" (click)=\\\"sendMessage()\\\">Envoyer ></button>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".bot {\\n  clear: both;\\n  float: left;\\n  width: 50%;\\n  background-color: blue; }\\n\\n.user {\\n  clear: both;\\n  float: right;\\n  width: 50%;\\n  margin: 5px 0 5px;\\n  background-color: grey; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb25hcy9Eb2N1bWVudHMvY2hhdGJvdC9zcmMvYXBwL2NoYXQvY2hhdC1kaWFsb2cvY2hhdC1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLFVBQVU7RUFDVixzQkFBc0IsRUFBQTs7QUFHeEI7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLFVBQVU7RUFDVixpQkFBaUI7RUFDakIsc0JBQXNCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jaGF0L2NoYXQtZGlhbG9nL2NoYXQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvdCB7XG4gIGNsZWFyOiBib3RoO1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbn1cblxuLnVzZXIge1xuICBjbGVhcjogYm90aDtcbiAgZmxvYXQ6IHJpZ2h0O1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDVweCAwIDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ChatService, Message} from '../chat.service';\nimport {Observable} from 'rxjs';\nimport {scan} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.scss']\n})\nexport class ChatDialogComponent implements OnInit {\n\n  messages: Observable<Message[]>;\n  formValue: string;\n  fontSizeBig = false;\n\n  constructor(private chat: ChatService) {\n  }\n\n  ngOnInit() {\n    // appends to array after each new message is added to feedSource\n    this.messages = this.chat.conservation.asObservable().pipe(scan((acc, val) => acc.concat(val)));\n  }\n\n  sendMessage() {\n    this.chat.converse(this.formValue);\n    this.formValue = '';\n  }\n\n  changeFontSize() {\n    console.log('je passe');\n    this.fontSizeBig = !this.fontSizeBig;\n  }\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChatDialogComponent} from './chat-dialog/chat-dialog.component';\nimport {ChatService} from './chat.service';\nimport {FormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ChatDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    ChatDialogComponent\n  ],\n  providers: [\n    ChatService\n  ]\n})\nexport class ChatModule {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\n\nimport {ApiAiClient} from 'api-ai-javascript/es6/ApiAiClient';\nimport {Observable} from 'rxjs';\nimport {BehaviorSubject} from 'rxjs';\n\nexport class Message {\n  constructor(public content: string, public sentBy: string) {\n\n  }\n}\n\n@Injectable()\nexport class ChatService {\n\n  readonly token = environment.dialogFlow.angularBot;\n  readonly client = new ApiAiClient({accessToken: this.token});\n\n  conservation = new BehaviorSubject<Message[]>([]);\n\n  constructor() {\n  }\n\n  // adds message to source\n  update(msg: Message) {\n    this.conservation.next([msg]);\n  }\n\n  // sends and receive messages via DialogFlow\n  converse(msg: string) {\n    const userMessage = new Message(msg, 'user');\n    this.update(userMessage);\n\n    return this.client.textRequest(msg)\n      .then(res => {\n        const speech = res.result.fulfillment.speech;\n        const botMessage = new Message(speech, 'bot');\n        this.update(botMessage);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  dialogFlow: {\n    angularBot : '319ed52c65504ce7abb9b899fc2f155b'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}